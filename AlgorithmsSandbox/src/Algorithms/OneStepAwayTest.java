package Algorithms;

import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;


class OneStepAwayTest {
    public static class TestData {
        public String string1;
        public String string2;
        public boolean result;

        public TestData(String string1, String string2, boolean result) {
            this.string1 = string1;
            this.string2 = string2;
            this.result = result;
        }

        @Override
        public String toString() {
            return "1: " + string1 + "; 2: " + string2 + "; result: " + result;
        }
    }

    private static TestData[] staticExamples = {
            new TestData("aaa", "aab", true),
            new TestData("a", "a", true),
            new TestData("", "a", true),
            new TestData("aaaa", "aaa", true),
            new TestData("aaa", "bab", false),
            new TestData("aaaa", "aab", false),
            new TestData("aaa", "aaaaa", false),
            new TestData("baa", "aaa", true),
            new TestData("baa", "aa", true),
            new TestData("bac", "ac", true)
    };

    private static final int MAX_STRING_LENGTH=10000;
    private static final int testForOneLength=1000;

    @Test
    void isOneStepAway() {
        testOnStaticExamples();
        testOnAutogeneratedExamples();
    }

    private void testOnStaticExamples() {
        for (TestData testData: staticExamples) {
            System.out.println(testData);
            assertTrue(OneAway.checkStrings(testData.string1, testData.string2) == testData.result);
        }
    }

    private void testOnAutogeneratedExamples() {
        for (int i=0; i < MAX_STRING_LENGTH; i++) {

        }
    }
}